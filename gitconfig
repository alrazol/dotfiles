[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto

[color "branch"]
  current = green
  remote = yellow

[core]
  pager = less -FRSX
  editor = code --wait # editor = '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl' -n -w
  ignorecase = false
  autocrlf = input
  verbose = true

[alias]
  co = checkout
  st = status -sb
  br = branch
  ci = commit
  cm = commit -m
  d = !git --no-pager diff
  dt  = difftool
  dts = difftool --staged
  stat = !git --no-pager diff --stat

  # Clean merged branches
  sweep = !git branch --merged master | grep -v 'master$' | xargs git branch -d && git remote prune origin
  sweepmain = !git branch --merged main | grep -v 'main$' | xargs git branch -d && git remote prune origin


  # http://www.jukie.net/bart/blog/pimping-out-git-log
  lg = log --graph --all --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

  # Serve local repo. http://coderwall.com/p/eybtga
  # Then other can access via `git clone git://#{YOUR_IP_ADDRESS}/
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

  m = checkout master

  # Removes a file from the index
  unstage = reset HEAD --

[help]
	autocorrect = 1

[push]
  # on git push, only push current branch to the remote one with same name
  default = simple
  # push annotated tags on the branch as well when pushing branch
  followTags = true
  # automatically create a remote branch if missing
  autoSetupRemote = true

[branch "master"]
  mergeoptions = --no-edit

[user]
	email = brunolajoie@gmail.com
	name = Bruno Lajoie
[pull]
	ff = yes
  rebase = true
[init]
	defaultBranch = master
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

# DIFFSTATIC tool https://difftastic.wilfred.me.uk/git.html
[diff]
  tool = difftastic

[difftool]
  prompt = false

[difftool "difftastic"]
  cmd = difft "$LOCAL" "$REMOTE"

[pager]
  difftool = true

[merge]
  tool = code
[mergetool "code"]
  cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[credential "https://github.com"]
	helper = !/usr/local/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = !/usr/local/bin/gh auth git-credential

# Kpler Specific git config is to be found in a specific gitconfig file
[includeIf "gitdir:~/code/kpler/"]
  path = ~/.gitconfig.kpler
