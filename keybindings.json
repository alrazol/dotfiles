// Place your key bindings in this file to override the defaults
[
  {
      // uses extension "past-with-indent" to mimic sublimeText behavior
      "key": "cmd+shift+v",
      "command": "pasteAndIndent.action",
      "when": "editorTextFocus && !editorReadonly"
  },
  {
      "key": "cmd+e",
      "command": "workbench.view.explorer"
  },
  {
      "key": "shift+cmd+e",
      "command": "-workbench.view.explorer"
  },
  {
      "key": "cmd+e",
      "command": "-actions.findWithSelection"
  },
  {
      "key": "k",
      "command": "notebook.cell.clearOutputs",
      "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
      "key": "alt+delete",
      "command": "-notebook.cell.clearOutputs",
      "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
      "key": "ctrl+shift+-",
      "command": "notebook.cell.split",
      "when": "notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
      "key": "cmd+k ctrl+shift+alt+cmd+l",
      "command": "-notebook.cell.split",
      "when": "notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
{
      "key": "ctrl+alt+j",
      "command": "-notebook.cell.joinBelow",
      "when": "notebookEditorFocused"
  },
  {
      "key": "shift+cmd+i",
      "command": "toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
  },
  {
      "key": "ctrl+space",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
  },
  {
      "key": "shift+alt+i",
      "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
      "when": "editorTextFocus"
  },
  {
      "key": "shift+alt+i",
      "command": "toggleSuggestionFocus",
      "when": "suggestWidgetVisible && textInputFocus"
  },
  {
      "key": "ctrl+alt+space",
      "command": "-toggleSuggestionFocus",
      "when": "suggestWidgetVisible && textInputFocus"
  },
  {
      "key": "alt+down",
      "command": "-editor.action.moveLinesDownAction",
      "when": "editorTextFocus && !editorReadonly"
  },
  {
      "key": "alt+up",
      "command": "-editor.action.moveLinesUpAction",
      "when": "editorTextFocus && !editorReadonly"
  },
  {
      "key": "alt+down",
      "command": "gotoNextPreviousMember.nextMember"
  },
  {
      "key": "ctrl+down",
      "command": "-gotoNextPreviousMember.nextMember"
  },
  {
      "key": "alt+up",
      "command": "gotoNextPreviousMember.previousMember"
  },
  {
      "key": "ctrl+up",
      "command": "-gotoNextPreviousMember.previousMember"
  },
  {
      "key": "ctrl+k",
      "command": "notebook.cell.moveUp",
      "when": "notebookEditorFocused && !inputFocus"
  },
  {
      "key": "alt+up",
      "command": "-notebook.cell.moveUp",
      "when": "notebookEditorFocused && !inputFocus"
  },
  {
      "key": "ctrl+j",
      "command": "notebook.cell.moveDown",
      "when": "notebookEditorFocused && !inputFocus"
  },
  {
      "key": "alt+down",
      "command": "-notebook.cell.moveDown",
      "when": "notebookEditorFocused && !inputFocus"
  },
  {
      "key": "ctrl+alt+n",
      "command": "-code-runner.run"
  },
  {
      "key": "ctrl+s",
      "command": "workbench.action.debug.stepInto",
      "when": "debugState != 'inactive'"
  },
  {
      "key": "f11",
      "command": "-workbench.action.debug.stepInto",
      "when": "debugState != 'inactive'"
  },
  {
      "key": "ctrl+n",
      "command": "workbench.action.debug.stepOver",
      "when": "debugState == 'stopped'"
  },
  {
      "key": "f10",
      "command": "-workbench.action.debug.stepOver",
      "when": "debugState == 'stopped'"
  },
  {
      "key": "ctrl+c",
      "command": "workbench.action.debug.continue",
      "when": "debugState == 'stopped'"
  },
  {
      "key": "f5",
      "command": "-workbench.action.debug.continue",
      "when": "debugState == 'stopped'"
  },
  {
      "key": "ctrl+u",
      "command": "workbench.action.debug.stepOut",
      "when": "debugState == 'stopped'"
  },
  {
      "key": "shift+f11",
      "command": "-workbench.action.debug.stepOut",
      "when": "debugState == 'stopped'"
  },
  {
      "key": "alt+cmd+1",
      "command": "workbench.action.editorLayoutSingle"
  },
  {
      "key": "alt+cmd+2",
      "command": "workbench.action.editorLayoutTwoColumns"
  },
  {
      "key": "alt+cmd+3",
      "command": "workbench.action.editorLayoutThreeColumns"
  },
  {
      "key": "shift+alt+cmd+2",
      "command": "workbench.action.editorLayoutTwoRows"
  },
  {
      "key": "shift+alt+cmd+3",
      "command": "workbench.action.editorLayoutThreeRows"
  },
  {
      "key": "ctrl+k",
      "command": "workbench.action.terminal.clear",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
      "key": "cmd+k",
      "command": "-workbench.action.terminal.clear",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
      "key": "cmd+i",
      "command": "-markdown.extension.editing.toggleItalic",
      "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
      "key": "ctrl+shift+alt+cmd+l",
      "command": "-workbench.action.terminal.focusTabs",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
      "key": "ctrl+`",
      "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+alt+`",
    "command": "workbench.action.toggleMaximizedPanel",
},
{
    "key": "ctrl+shift+alt+j",
    "command": "-notebook.cell.joinAbove",
    "when": "notebookEditorFocused"
},
{
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
},
{
    "key": "ctrl+shift+m",
    "command": "notebook.cell.joinSelected"
},
]
